import { CompletionItem, CompletionItemKind, CompletionList, Position } from 'vscode-languageserver';
import { NativeTypeConstructors } from '../prisma-schema-wasm/nativeTypes';
import { BlockType } from '../types';
type JSONSimpleCompletionItems = {
    label: string;
    insertText?: string;
    documentation?: string;
    fullSignature?: string;
}[];
type JSONFullCompletionItems = {
    label: string;
    insertText?: string;
    documentation: string;
    fullSignature: string;
    params: {
        label: string;
        documentation: string;
    }[];
}[];
/**
 * Converts a json object containing labels and documentations to CompletionItems.
 */
export declare function convertToCompletionItems(completionItems: JSONSimpleCompletionItems, itemKind: CompletionItemKind): CompletionItem[];
/**
 * Converts a json object containing attributes including function signatures to CompletionItems.
 */
export declare function convertAttributesToCompletionItems(completionItems: JSONFullCompletionItems, itemKind: CompletionItemKind): CompletionItem[];
export declare function toCompletionItems(allowedTypes: string[], kind: CompletionItemKind): CompletionItem[];
export declare const buildDocumentation: (element: NativeTypeConstructors, documentation?: string) => string;
export declare function suggestEqualSymbol(blockType: BlockType): CompletionList | undefined;
/***
 * Checks if inside e.g. "here"
 * Does not check for escaped quotation marks.
 */
export declare function isInsideQuotationMark(currentLineUntrimmed: string, position: Position): boolean;
export {};
