import { Position, Range } from 'vscode-languageserver';
import { TextDocument } from 'vscode-languageserver-textdocument';
import { BlockType } from '../types';
export declare class Block {
    type: BlockType;
    range: Range;
    nameRange: Range;
    name: string;
    constructor(type: BlockType, range: Range, nameRange: Range, name: string);
}
export declare function getBlocks(lines: string[]): Generator<Block, void, void>;
export declare function getDatamodelBlock(blockName: string, lines: string[]): Block | void;
export declare function getFieldsFromCurrentBlock(lines: string[], block: Block, position?: Position): string[];
export declare function getFieldTypesFromCurrentBlock(lines: string[], block: Block, position?: Position): {
    fieldTypes: Map<string, {
        lineIndexes: number[];
        fieldName: string | undefined;
    }>;
    fieldTypeNames: Record<string, string>;
};
export declare function getCompositeTypeFieldsRecursively(lines: string[], compositeTypeFieldNames: string[], fieldTypesFromBlock: {
    fieldTypes: Map<string, {
        lineIndexes: number[];
        fieldName: string | undefined;
    }>;
    fieldTypeNames: Record<string, string>;
}): string[];
export declare const getDocumentationForBlock: (document: TextDocument, block: Block) => string[];
