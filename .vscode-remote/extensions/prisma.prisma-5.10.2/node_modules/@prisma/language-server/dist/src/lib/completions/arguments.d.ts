import { CompletionItem } from 'vscode-languageserver';
import { PreviewFeatures } from '../types';
export declare const sortLengthProperties: CompletionItem[];
export declare const relationArguments: CompletionItem[];
export declare const opsIndexFulltextCompletion: (items: CompletionItem[]) => number;
export declare const virtualSequenceDefaultCompletion: (items: CompletionItem[]) => number;
export declare const minValueSequenceDefaultCompletion: (items: CompletionItem[]) => number;
export declare const maxValueSequenceDefaultCompletion: (items: CompletionItem[]) => number;
export declare const cacheSequenceDefaultCompletion: (items: CompletionItem[]) => number;
export declare const incrementSequenceDefaultCompletion: (items: CompletionItem[]) => number;
export declare const startSequenceDefaultCompletion: (items: CompletionItem[]) => number;
export declare const scalarListDefaultCompletion: (items: CompletionItem[]) => number;
export declare const booleanDefaultCompletions: (items: CompletionItem[]) => number;
export declare function filterSortLengthBasedOnInput(attribute: '@@unique' | '@unique' | '@@id' | '@id' | '@@index', previewFeatures: PreviewFeatures[] | undefined, datasourceProvider: string | undefined, wordBeforePosition: string, items: CompletionItem[]): CompletionItem[];
export declare function getCompletionsForFieldAttributeArgs(fieldAttributeWithParams: '@unique' | '@id', previewFeatures: PreviewFeatures[] | undefined, datasourceProvider: string | undefined, wordBeforePosition: string): CompletionItem[];
export declare function getCompletionsForBlockAttributeArgs({ blockAttributeWithParams, wordBeforePosition, datasourceProvider, previewFeatures, }: {
    blockAttributeWithParams: '@@unique' | '@@id' | '@@index' | '@@fulltext';
    wordBeforePosition: string;
    datasourceProvider: string | undefined;
    previewFeatures: PreviewFeatures[] | undefined;
}): CompletionItem[];
