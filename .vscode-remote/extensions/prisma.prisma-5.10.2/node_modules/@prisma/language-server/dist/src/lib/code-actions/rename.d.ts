import { Position } from 'vscode-languageserver';
import type { TextEdit, TextDocument } from 'vscode-languageserver-textdocument';
import { Block } from '../ast';
import { BlockType } from '../types';
export declare function isRelationField(currentLine: string, lines: string[]): boolean;
export declare function isValidFieldName(currentLine: string, position: Position, block: Block, document: TextDocument): boolean;
export declare const isDatamodelBlockName: (position: Position, block: Block, lines: string[], document: TextDocument) => boolean;
export declare function isEnumValue(line: string, position: Position, block: Block, document: TextDocument): boolean;
export declare function printLogMessage(currentName: string, newName: string, isBlockRename: boolean, isFieldRename: boolean, isEnumValueRename: boolean, blockType: BlockType): void;
/**
 * Renames references in any '@@index', '@@id' and '@@unique' attributes in the same model.
 * Renames references in any referenced fields inside a '@relation' attribute in the same model (fields: []).
 * Renames references inside a '@relation' attribute in other model blocks (references: []).
 */
export declare function renameReferencesForFieldName(currentName: string, newName: string, document: TextDocument, lines: string[], block: Block, isRelationFieldRename: boolean): TextEdit[];
/**
 * Renames references where the current enum value is used as a default value in other model blocks.
 */
export declare function renameReferencesForEnumValue(currentValue: string, newName: string, document: TextDocument, lines: string[], enumName: string): TextEdit[];
/**
 * Renames references where the model name is used as a relation type in the same and other model blocks.
 */
export declare function renameReferencesForModelName(currentName: string, newName: string, document: TextDocument, lines: string[]): TextEdit[];
export declare function insertBasicRename(newName: string, currentName: string, document: TextDocument, line: number): TextEdit;
export declare function mapExistsAlready(currentLine: string, lines: string[], block: Block, isDatamodelBlockRename: boolean): boolean;
export declare function insertMapAttribute(currentName: string, position: Position, block: Block, isDatamodelBlockRename: boolean): TextEdit;
export declare function extractCurrentName(line: string, isBlockRename: boolean, isEnumValueRename: boolean, isFieldRename: boolean, document: TextDocument, position: Position): string;
